Imports System

Public Delegate Function ProcessResults(ByVal x As Double, ByVal y As Double) _
    As Double

Public Class Processor
    Private factor As Double

    Public Sub New(ByVal factor As Double)
        Me.factor = factor
    End Sub

    Public Function Compute(ByVal x As Double, ByVal y As Double) As Double
        Dim Result As Double = (x + y) * factor

        Console.WriteLine("InstanceResults: {0}", Result)

        Return Result
    End Function

    Public Shared Function StaticCompute(ByVal x As Double, ByVal y As Double) _
        As Double

        Dim Result As Double = (x + y) * 0.5

        Console.WriteLine("StaticResult: {0}", Result)

        Return Result
    End Function
End Class

Public Class EntryPoint
    Shared Sub Main()
        Dim proc1 As Processor = New Processor(0.75)
        Dim proc2 As Processor = New Processor(0.83)

        Dim delegates As ProcessResults() = New ProcessResults() _
            {New ProcessResults(AddressOf proc1.Compute), _
            New ProcessResults(AddressOf proc2.Compute), _
            New ProcessResults(AddressOf Processor.StaticCompute)}

        Dim chained As ProcessResults = _
            CType(System.Delegate.Combine(delegates), ProcessResults)
        Dim chain As System.Delegate() = chained.GetInvocationList()

        Dim accumulator As Double = 0

        For i As Integer = 0 To chain.Length - 1
            Dim current As ProcessResults = CType(chain(i), ProcessResults)

            accumulator += current(4, 5)
        Next i

        Console.WriteLine("Output: {0}", accumulator)
    End Sub
End Class
