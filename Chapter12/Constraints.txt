Imports System
Imports System.Collections.Generic

Public Interface IShape
    ReadOnly Property Area() As Double
End Interface

Public Class Circle
    Implements IShape

    Private radius As Double

    Public Sub New(ByVal radius As Double)
        Me.radius = radius
    End Sub

    Public ReadOnly Property Area() As Double Implements IShape.Area
        Get
            Return 3.1415 * radius * radius
        End Get
    End Property
End Class

Public Class Rect
    Implements IShape

    Private width As Double
    Private height As Double

    Public Sub New(ByVal width As Double, ByVal height As Double)
        Me.width = width
        Me.height = height
    End Sub

    Public ReadOnly Property Area() As Double Implements IShape.Area
        Get
            Return width * height
        End Get
    End Property
End Class

Public Class Shapes(Of T)
    Private shapes As List(Of T) = New List(Of T)()

    Public ReadOnly Property TotalArea() As Double
        Get
            Dim acc As Double = 0
            For Each shape As T In shapes
                'THIS WON'T COMPILE!!!
                acc += shape.Area
            Next shape
            Return acc
        End Get
    End Property

    Public Sub Add(ByVal shape As T)
        shapes.Add(shape)
    End Sub
End Class

Public Class EntryPoint
    Shared Sub Main()
        Dim shapes As Shapes(Of IShape) = New Shapes(Of IShape)()

        shapes.Add(New Circle(2))
        shapes.Add(New Rect(3, 5))

        Console.WriteLine("Total Area: {0}", shapes.TotalArea)
    End Sub
End Class

------------------------------------------------------------

Public Class Shapes(Of T)
    Private shapes As List(Of T) = New List(Of T)()

    Public ReadOnly Property TotalArea() As Double
        Get
            Dim acc As Double = 0
            For Each shape As T In shapes
                'DON'T DO THIS!
                Dim theShape As IShape = CType(shape, IShape)
                acc += theShape.Area
            Next shape
            Return acc
        End Get
    End Property

    Public Sub Add(ByVal shape As T)
        shapes.Add(shape)
    End Sub
End Class

------------------------------------------------------------

Public Class Shapes(Of T As IShape)
    Private shapes As List(Of T) = New List(Of T)()

    Public ReadOnly Property TotalArea() As Double
        Get
            Dim acc As Double = 0

            For Each shape As T In shapes
                acc += shape.Area
            Next shape

            Return acc
        End Get
    End Property

    Public Sub Add(ByVal shape As T)
        shapes.Add(shape)
    End Sub
End Class

------------------------------------------------------------

Imports System
Imports System.Collections.Generic

Public Interface IValue
    'IValue methods.
End Interface

Public Class MyDictionary(Of TKey As _
    {Structure, IComparable(Of TKey)}, TValue As {IValue, New})

    Private imp As Dictionary(Of TKey, TValue) = New Dictionary(Of TKey, TValue)()

    Public Sub Add(ByVal key As TKey, ByVal val As TValue)
        imp.Add(key, val)
    End Sub
End Class

------------------------------------------------------------

