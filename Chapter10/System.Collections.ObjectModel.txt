Public Class Collection(Of T)
    Implements ICollection(Of T)
    Implements IList(Of T)
    Implements IEnumerable(Of T)
    Implements ICollection
    Implements IList
    Implements IEnumerable

    Protected Overridable Sub ClearItems()
    End Sub

    Protected Overridable Sub InsertItem(ByVal index As Integer, ByVal item As T)
    End Sub

    Protected Overridable Sub RemoveItem(ByVal index As Integer)
    End Sub

    Protected Overridable Sub SetItem(ByVal index As Integer, ByVal item As T)
    End Sub
End Class

------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel

Public Class MyCollection(Of T)
    Inherits Collection(Of T)

    Public Sub New()
        MyBase.New()
    End Sub

    Public Sub New(ByVal list As IList(Of T))
        MyBase.New(list)
    End Sub

    Public Sub New(ByVal enumerable As IEnumerable(Of T))
        MyBase.New()

        For Each item As T In enumerable
            Me.Add(item)
        Next
    End Sub

    Public Sub New(ByVal enumerator As IEnumerator(Of T))
        MyBase.New()

        While enumerator.MoveNext()
            Me.Add(enumerator.Current)
        End While
    End Sub
End Class

Public Class EntryPoint
    Shared Sub Main()
        Dim coll As MyCollection(Of Integer) =  _
            New MyCollection(Of Integer)(GenerateNumbers())

        For Each n As Integer In coll
            Console.WriteLine(n)
        Next
    End Sub

    Shared Function GenerateNumbers() As IEnumerable(Of Integer)
        Dim SomeNumbers As New MyCollection(Of Integer)
        Dim i As Integer

        For i = 4 To 0 Step -1
            SomeNumbers.Add(i)
        Next

        Return SomeNumbers
    End Function
End Class

------------------------------------------------------------

